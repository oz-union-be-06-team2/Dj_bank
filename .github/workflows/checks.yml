# .github/workflows/checks.yml

name: Code Quality Checks

# 트리거 이벤트 부분
# 코드가 푸시되거나 풀 리퀘스트가 생성될 때 CI가 실행됩니다.
on:
  push:
    branches:
      - feature/san_base_setting
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      -name: test
        echo ${{ secrets.PG_USER }}
        echo ${{ secrets.PG_PASSWORD }}
        echo ${{ secrets.PG_NAME }}

    services:
      db:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: '3.12'
#
#    - name: Install Poetry
#      run: |
#        curl -sSL https://install.python-poetry.org | python3 -
#        echo "${HOME}/.local/bin" >> $GITHUB_PATH
#
#    - name: Install Packages & Libraries
#      run: |
#        poetry install
#
#    - name: Run isort (Import sorting)
#      run: |
#        poetry run isort . --check --diff
#
#    - name: Run black (Code formatting)
#      run: |
#        poetry run black . --check
#
#    - name: Wait for PostgreSQL
#      run: |
#        until pg_isready -h localhost -p ${{ secrets.DB_PORT }} -U ${{ secrets.PG_USER }}; do
#          sleep 1
#        don
#
#    - name: Run Django Migration
#      run: |
#        poetry run python manage.py makemigrations
#        poetry run python manage.py migrate

#		- name: Test python project
#      run: |
#        poetry run python manage.py test